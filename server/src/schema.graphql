# import Classroom, Enrollment from "./generated/prisma.graphql"

type Query {
  me: User
  allSubjects: [Subject]!
}

type Mutation {
  # User Mutations
  signup(email: String!, password: String!, fname: String!, lname: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

  # Student Mutations
  ## Enrollment
  enrollStudent(studentid: ID!): CreateResult!
  ## Course
  assignStudentNewCourse(studentid: ID!): CreateResult!

  # Course Mutations
  ## SubSubjects
  assignCourseNewSubSubjects(courseid: ID!, subsubjects: [ID!]!): UpdateResult!
}

type AuthPayload {
  token: String!
  user: User!
}

# Some mutations create new rows that can only return IDs. For example, if a student is
# enrolled you might expect that mutation to return the new Enrollment, but when you use
# Prisma-style create+connect arguments not the entire object is ready, only the ID, so we must
# limit the data returned to just the ID.
type CreateResult {
  id: ID!
}

type UpdateResult {
  success: Boolean!
}

type User {
  id: ID!
  fname: String!
  lname: String!
}

#type PrivateUser {
#  id: ID!
#  email: String!
#  fname: String!
#  lname: String!
#  type: Int!
#  status: Int!
#  flags: Int!
#  classrooms: [Classroom!]!
#  enrollment: Enrollment
#}
